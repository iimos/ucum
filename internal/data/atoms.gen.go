// Code generated; DO NOT EDIT.
package data

import "math/big"
import "github.com/iimos/ucum/internal/types"

var prefixes = [...]big.Rat{}

var Atoms = map[string]types.Atom{
	"m":               {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ym":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zm":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Em":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pm":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tm":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gm":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mm":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"km":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hm":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dam":             {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dm":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cm":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mm":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"um":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nm":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pm":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fm":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"am":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zm":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ym":              {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kim":             {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mim":             {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gim":             {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tim":             {Code: "m", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"s":               {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ys":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zs":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Es":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ps":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ts":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gs":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ms":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ks":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hs":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"das":             {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ds":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cs":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"ms":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"us":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"ns":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"ps":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fs":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"as":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zs":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ys":              {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kis":             {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mis":             {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gis":             {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tis":             {Code: "s", Kind: "time", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"g":               {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Yg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Eg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dag":             {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ug":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"ng":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"ag":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yg":              {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kig":             {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mig":             {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gig":             {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tig":             {Code: "g", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"rad":             {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Yrad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zrad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Erad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Prad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Trad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Grad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mrad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"krad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hrad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"darad":           {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"drad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"crad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mrad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"urad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nrad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"prad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"frad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"arad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zrad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yrad":            {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kirad":           {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mirad":           {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Girad":           {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tirad":           {Code: "rad", Kind: "plane angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"K":               {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daK":             {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yK":              {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiK":             {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiK":             {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiK":             {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiK":             {Code: "K", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"C":               {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daC":             {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yC":              {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiC":             {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiC":             {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiC":             {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiC":             {Code: "C", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"cd":              {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ycd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zcd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ecd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pcd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tcd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gcd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mcd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kcd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hcd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dacd":            {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dcd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"ccd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mcd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ucd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"ncd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pcd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fcd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"acd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zcd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ycd":             {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kicd":            {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Micd":            {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gicd":            {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ticd":            {Code: "cd", Kind: "luminous intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"10*":             {Code: "10*", Kind: "number", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"10^":             {Code: "10^", Kind: "number", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[pi]":            {Code: "[pi]", Kind: "number", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"%":               {Code: "%", Kind: "fraction", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[ppth]":          {Code: "[ppth]", Kind: "fraction", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[ppm]":           {Code: "[ppm]", Kind: "fraction", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[ppb]":           {Code: "[ppb]", Kind: "fraction", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[pptr]":          {Code: "[pptr]", Kind: "fraction", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"mol":             {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ymol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zmol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Emol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pmol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tmol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gmol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mmol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kmol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hmol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"damol":           {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dmol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cmol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mmol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"umol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nmol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pmol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fmol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"amol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zmol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ymol":            {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kimol":           {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mimol":           {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gimol":           {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Timol":           {Code: "mol", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"sr":              {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ysr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zsr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Esr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Psr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tsr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gsr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Msr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ksr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hsr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dasr":            {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dsr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"csr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"msr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"usr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nsr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"psr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fsr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"asr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zsr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ysr":             {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kisr":            {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Misr":            {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gisr":            {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tisr":            {Code: "sr", Kind: "solid angle", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Hz":              {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"THz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daHz":            {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yHz":             {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiHz":            {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiHz":            {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiHz":            {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiHz":            {Code: "Hz", Kind: "frequency", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"N":               {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daN":             {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yN":              {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiN":             {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiN":             {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiN":             {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiN":             {Code: "N", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pa":              {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daPa":            {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yPa":             {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiPa":            {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiPa":            {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiPa":            {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiPa":            {Code: "Pa", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"J":               {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daJ":             {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yJ":              {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiJ":             {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiJ":             {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiJ":             {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiJ":             {Code: "J", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"W":               {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daW":             {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yW":              {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiW":             {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiW":             {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiW":             {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiW":             {Code: "W", Kind: "power", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"A":               {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daA":             {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yA":              {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiA":             {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiA":             {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiA":             {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiA":             {Code: "A", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"V":               {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daV":             {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yV":              {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiV":             {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiV":             {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiV":             {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiV":             {Code: "V", Kind: "electric potential", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"F":               {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daF":             {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yF":              {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiF":             {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiF":             {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiF":             {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiF":             {Code: "F", Kind: "electric capacitance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ohm":             {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"POhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daOhm":           {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yOhm":            {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiOhm":           {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiOhm":           {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiOhm":           {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiOhm":           {Code: "Ohm", Kind: "electric resistance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"S":               {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ES":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daS":             {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yS":              {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiS":             {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiS":             {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiS":             {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiS":             {Code: "S", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Wb":              {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daWb":            {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yWb":             {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiWb":            {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiWb":            {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiWb":            {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiWb":            {Code: "Wb", Kind: "magnetic flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Cel":             {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ECel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daCel":           {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yCel":            {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiCel":           {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiCel":           {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiCel":           {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiCel":           {Code: "Cel", Kind: "temperature", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"T":               {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ET":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daT":             {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yT":              {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiT":             {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiT":             {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiT":             {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiT":             {Code: "T", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"H":               {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daH":             {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yH":              {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiH":             {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiH":             {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiH":             {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiH":             {Code: "H", Kind: "inductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"lm":              {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ylm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zlm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Elm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Plm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tlm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Glm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mlm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"klm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hlm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dalm":            {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dlm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"clm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mlm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ulm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nlm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"plm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"flm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"alm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zlm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ylm":             {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kilm":            {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Milm":            {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gilm":            {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tilm":            {Code: "lm", Kind: "luminous flux", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"lx":              {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ylx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zlx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Elx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Plx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tlx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Glx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mlx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"klx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hlx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dalx":            {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dlx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"clx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mlx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ulx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nlx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"plx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"flx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"alx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zlx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ylx":             {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kilx":            {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Milx":            {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gilx":            {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tilx":            {Code: "lx", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Bq":              {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daBq":            {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yBq":             {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiBq":            {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiBq":            {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiBq":            {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiBq":            {Code: "Bq", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gy":              {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daGy":            {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yGy":             {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiGy":            {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiGy":            {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiGy":            {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiGy":            {Code: "Gy", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Sv":              {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ESv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daSv":            {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zSv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ySv":             {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiSv":            {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiSv":            {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiSv":            {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiSv":            {Code: "Sv", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"gon":             {Code: "gon", Kind: "plane angle", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"deg":             {Code: "deg", Kind: "plane angle", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"'":               {Code: "'", Kind: "plane angle", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"''":              {Code: "''", Kind: "plane angle", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"l":               {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Yl":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zl":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"El":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pl":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tl":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gl":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ml":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kl":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hl":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dal":             {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dl":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cl":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"ml":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ul":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nl":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pl":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fl":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"al":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zl":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yl":              {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kil":             {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mil":             {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gil":             {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Til":             {Code: "l", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"L":               {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ML":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daL":             {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yL":              {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiL":             {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiL":             {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiL":             {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiL":             {Code: "L", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ar":              {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Yar":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zar":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ear":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Par":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tar":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gar":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mar":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kar":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"har":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daar":            {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dar":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"car":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mar":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uar":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nar":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"par":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"far":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aar":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zar":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yar":             {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kiar":            {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Miar":            {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Giar":            {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tiar":            {Code: "ar", Kind: "area", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"min":             {Code: "min", Kind: "time", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"h":               {Code: "h", Kind: "time", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"d":               {Code: "d", Kind: "time", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"a_t":             {Code: "a_t", Kind: "time", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"a_j":             {Code: "a_j", Kind: "time", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"a_g":             {Code: "a_g", Kind: "time", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"a":               {Code: "a", Kind: "time", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"wk":              {Code: "wk", Kind: "time", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"mo_s":            {Code: "mo_s", Kind: "time", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"mo_j":            {Code: "mo_j", Kind: "time", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"mo_g":            {Code: "mo_g", Kind: "time", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"mo":              {Code: "mo", Kind: "time", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"t":               {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Yt":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zt":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Et":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pt":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tt":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gt":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mt":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kt":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ht":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dat":             {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dt":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"ct":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mt":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ut":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nt":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pt":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"ft":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"at":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zt":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yt":              {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kit":             {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mit":             {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Git":             {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tit":             {Code: "t", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"bar":             {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ybar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zbar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ebar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pbar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tbar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gbar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mbar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kbar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hbar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dabar":           {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dbar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cbar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mbar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ubar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nbar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pbar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fbar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"abar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zbar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ybar":            {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kibar":           {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mibar":           {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gibar":           {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tibar":           {Code: "bar", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"u":               {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Yu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Eu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ku":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dau":             {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"du":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"au":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yu":              {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kiu":             {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Miu":             {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Giu":             {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tiu":             {Code: "u", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"eV":              {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YeV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZeV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EeV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PeV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TeV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GeV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MeV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"keV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"heV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daeV":            {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"deV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"ceV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"meV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ueV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"neV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"peV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"feV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aeV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zeV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yeV":             {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KieV":            {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MieV":            {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GieV":            {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TieV":            {Code: "eV", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"AU":              {Code: "AU", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"pc":              {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ypc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zpc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Epc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ppc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tpc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gpc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mpc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kpc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hpc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dapc":            {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dpc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cpc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mpc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"upc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"npc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"ppc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fpc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"apc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zpc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ypc":             {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kipc":            {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mipc":            {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gipc":            {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tipc":            {Code: "pc", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[c]":             {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Y[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Z[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"E[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"P[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"T[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"G[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"M[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"k[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"h[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"da[c]":           {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"d[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"c[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"m[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"u[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"n[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"p[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"f[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"a[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"z[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"y[c]":            {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Ki[c]":           {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mi[c]":           {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gi[c]":           {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ti[c]":           {Code: "[c]", Kind: "velocity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[h]":             {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Y[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Z[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"E[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"P[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"T[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"G[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"M[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"k[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"h[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"da[h]":           {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"d[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"c[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"m[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"u[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"n[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"p[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"f[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"a[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"z[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"y[h]":            {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Ki[h]":           {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mi[h]":           {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gi[h]":           {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ti[h]":           {Code: "[h]", Kind: "action", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[k]":             {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Y[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Z[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"E[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"P[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"T[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"G[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"M[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"k[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"h[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"da[k]":           {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"d[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"c[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"m[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"u[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"n[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"p[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"f[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"a[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"z[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"y[k]":            {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Ki[k]":           {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mi[k]":           {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gi[k]":           {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ti[k]":           {Code: "[k]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[eps_0]":         {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Y[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Z[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"E[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"P[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"T[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"G[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"M[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"k[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"h[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"da[eps_0]":       {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"d[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"c[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"m[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"u[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"n[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"p[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"f[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"a[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"z[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"y[eps_0]":        {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Ki[eps_0]":       {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mi[eps_0]":       {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gi[eps_0]":       {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ti[eps_0]":       {Code: "[eps_0]", Kind: "electric permittivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[mu_0]":          {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Y[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Z[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"E[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"P[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"T[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"G[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"M[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"k[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"h[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"da[mu_0]":        {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"d[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"c[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"m[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"u[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"n[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"p[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"f[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"a[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"z[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"y[mu_0]":         {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Ki[mu_0]":        {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mi[mu_0]":        {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gi[mu_0]":        {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ti[mu_0]":        {Code: "[mu_0]", Kind: "magnetic permeability", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[e]":             {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Y[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Z[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"E[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"P[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"T[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"G[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"M[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"k[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"h[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"da[e]":           {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"d[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"c[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"m[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"u[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"n[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"p[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"f[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"a[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"z[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"y[e]":            {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Ki[e]":           {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mi[e]":           {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gi[e]":           {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ti[e]":           {Code: "[e]", Kind: "electric charge", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[m_e]":           {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Y[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Z[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"E[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"P[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"T[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"G[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"M[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"k[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"h[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"da[m_e]":         {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"d[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"c[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"m[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"u[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"n[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"p[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"f[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"a[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"z[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"y[m_e]":          {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Ki[m_e]":         {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mi[m_e]":         {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gi[m_e]":         {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ti[m_e]":         {Code: "[m_e]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[m_p]":           {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Y[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Z[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"E[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"P[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"T[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"G[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"M[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"k[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"h[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"da[m_p]":         {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"d[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"c[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"m[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"u[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"n[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"p[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"f[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"a[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"z[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"y[m_p]":          {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Ki[m_p]":         {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mi[m_p]":         {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gi[m_p]":         {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ti[m_p]":         {Code: "[m_p]", Kind: "mass", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[G]":             {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Y[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Z[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"E[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"P[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"T[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"G[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"M[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"k[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"h[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"da[G]":           {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"d[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"c[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"m[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"u[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"n[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"p[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"f[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"a[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"z[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"y[G]":            {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Ki[G]":           {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mi[G]":           {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gi[G]":           {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ti[G]":           {Code: "[G]", Kind: "(unclassified)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[g]":             {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Y[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Z[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"E[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"P[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"T[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"G[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"M[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"k[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"h[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"da[g]":           {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"d[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"c[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"m[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"u[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"n[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"p[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"f[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"a[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"z[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"y[g]":            {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Ki[g]":           {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mi[g]":           {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gi[g]":           {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ti[g]":           {Code: "[g]", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"atm":             {Code: "atm", Kind: "pressure", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[ly]":            {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Y[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Z[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"E[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"P[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"T[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"G[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"M[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"k[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"h[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"da[ly]":          {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"d[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"c[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"m[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"u[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"n[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"p[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"f[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"a[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"z[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"y[ly]":           {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Ki[ly]":          {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mi[ly]":          {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gi[ly]":          {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ti[ly]":          {Code: "[ly]", Kind: "length", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"gf":              {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ygf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zgf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Egf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pgf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tgf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ggf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mgf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kgf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hgf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dagf":            {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dgf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cgf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mgf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ugf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"ngf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pgf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fgf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"agf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zgf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ygf":             {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kigf":            {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Migf":            {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gigf":            {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tigf":            {Code: "gf", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[lbf_av]":        {Code: "[lbf_av]", Kind: "force", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ky":              {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daKy":            {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yKy":             {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiKy":            {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiKy":            {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiKy":            {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiKy":            {Code: "Ky", Kind: "lineic number", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gal":             {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daGal":           {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yGal":            {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiGal":           {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiGal":           {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiGal":           {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiGal":           {Code: "Gal", Kind: "acceleration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dyn":             {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ydyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zdyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Edyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pdyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tdyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gdyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mdyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kdyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hdyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dadyn":           {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ddyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cdyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mdyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"udyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"ndyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pdyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fdyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"adyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zdyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ydyn":            {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kidyn":           {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Midyn":           {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gidyn":           {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tidyn":           {Code: "dyn", Kind: "force", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"erg":             {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Yerg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zerg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Eerg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Perg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Terg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gerg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Merg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kerg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"herg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daerg":           {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"derg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cerg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"merg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uerg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nerg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"perg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"ferg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aerg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zerg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yerg":            {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kierg":           {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mierg":           {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gierg":           {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tierg":           {Code: "erg", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"P":               {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daP":             {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yP":              {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiP":             {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiP":             {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiP":             {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiP":             {Code: "P", Kind: "dynamic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Bi":              {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daBi":            {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yBi":             {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiBi":            {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiBi":            {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiBi":            {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiBi":            {Code: "Bi", Kind: "electric current", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"St":              {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ESt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daSt":            {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zSt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ySt":             {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiSt":            {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiSt":            {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiSt":            {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiSt":            {Code: "St", Kind: "kinematic viscosity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mx":              {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daMx":            {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yMx":             {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiMx":            {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiMx":            {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiMx":            {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiMx":            {Code: "Mx", Kind: "flux of magnetic induction", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"G":               {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daG":             {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yG":              {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiG":             {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiG":             {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiG":             {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiG":             {Code: "G", Kind: "magnetic flux density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Oe":              {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"POe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daOe":            {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yOe":             {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiOe":            {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiOe":            {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiOe":            {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiOe":            {Code: "Oe", Kind: "magnetic field intensity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gb":              {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daGb":            {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yGb":             {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiGb":            {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiGb":            {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiGb":            {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiGb":            {Code: "Gb", Kind: "magnetic tension", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"sb":              {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ysb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zsb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Esb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Psb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tsb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gsb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Msb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ksb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hsb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dasb":            {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dsb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"csb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"msb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"usb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nsb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"psb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fsb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"asb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zsb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ysb":             {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kisb":            {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Misb":            {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gisb":            {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tisb":            {Code: "sb", Kind: "lum. intensity density", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Lmb":             {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ELmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daLmb":           {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yLmb":            {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiLmb":           {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiLmb":           {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiLmb":           {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiLmb":           {Code: "Lmb", Kind: "brightness", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ph":              {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Yph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Eph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daph":            {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yph":             {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kiph":            {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Miph":            {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Giph":            {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tiph":            {Code: "ph", Kind: "illuminance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ci":              {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ECi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daCi":            {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yCi":             {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiCi":            {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiCi":            {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiCi":            {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiCi":            {Code: "Ci", Kind: "radioactivity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"R":               {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ER":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daR":             {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yR":              {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiR":             {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiR":             {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiR":             {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiR":             {Code: "R", Kind: "ion dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"RAD":             {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ERAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daRAD":           {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yRAD":            {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiRAD":           {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiRAD":           {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiRAD":           {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiRAD":           {Code: "RAD", Kind: "energy dose", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"REM":             {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daREM":           {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yREM":            {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiREM":           {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiREM":           {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiREM":           {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiREM":           {Code: "REM", Kind: "dose equivalent", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[in_i]":          {Code: "[in_i]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[ft_i]":          {Code: "[ft_i]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[yd_i]":          {Code: "[yd_i]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[mi_i]":          {Code: "[mi_i]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[fth_i]":         {Code: "[fth_i]", Kind: "depth of water", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[nmi_i]":         {Code: "[nmi_i]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[kn_i]":          {Code: "[kn_i]", Kind: "velocity", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[sin_i]":         {Code: "[sin_i]", Kind: "area", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[sft_i]":         {Code: "[sft_i]", Kind: "area", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[syd_i]":         {Code: "[syd_i]", Kind: "area", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[cin_i]":         {Code: "[cin_i]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[cft_i]":         {Code: "[cft_i]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[cyd_i]":         {Code: "[cyd_i]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[bf_i]":          {Code: "[bf_i]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[cr_i]":          {Code: "[cr_i]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[mil_i]":         {Code: "[mil_i]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[cml_i]":         {Code: "[cml_i]", Kind: "area", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[hd_i]":          {Code: "[hd_i]", Kind: "height of horses", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[ft_us]":         {Code: "[ft_us]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[yd_us]":         {Code: "[yd_us]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[in_us]":         {Code: "[in_us]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[rd_us]":         {Code: "[rd_us]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[ch_us]":         {Code: "[ch_us]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[lk_us]":         {Code: "[lk_us]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[rch_us]":        {Code: "[rch_us]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[rlk_us]":        {Code: "[rlk_us]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[fth_us]":        {Code: "[fth_us]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[fur_us]":        {Code: "[fur_us]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[mi_us]":         {Code: "[mi_us]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[acr_us]":        {Code: "[acr_us]", Kind: "area", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[srd_us]":        {Code: "[srd_us]", Kind: "area", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[smi_us]":        {Code: "[smi_us]", Kind: "area", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[sct]":           {Code: "[sct]", Kind: "area", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[twp]":           {Code: "[twp]", Kind: "area", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[mil_us]":        {Code: "[mil_us]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[in_br]":         {Code: "[in_br]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[ft_br]":         {Code: "[ft_br]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[rd_br]":         {Code: "[rd_br]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[ch_br]":         {Code: "[ch_br]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[lk_br]":         {Code: "[lk_br]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[fth_br]":        {Code: "[fth_br]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[pc_br]":         {Code: "[pc_br]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[yd_br]":         {Code: "[yd_br]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[mi_br]":         {Code: "[mi_br]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[nmi_br]":        {Code: "[nmi_br]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[kn_br]":         {Code: "[kn_br]", Kind: "velocity", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[acr_br]":        {Code: "[acr_br]", Kind: "area", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[gal_us]":        {Code: "[gal_us]", Kind: "fluid volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[bbl_us]":        {Code: "[bbl_us]", Kind: "fluid volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[qt_us]":         {Code: "[qt_us]", Kind: "fluid volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[pt_us]":         {Code: "[pt_us]", Kind: "fluid volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[gil_us]":        {Code: "[gil_us]", Kind: "fluid volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[foz_us]":        {Code: "[foz_us]", Kind: "fluid volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[fdr_us]":        {Code: "[fdr_us]", Kind: "fluid volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[min_us]":        {Code: "[min_us]", Kind: "fluid volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[crd_us]":        {Code: "[crd_us]", Kind: "fluid volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[bu_us]":         {Code: "[bu_us]", Kind: "dry volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[gal_wi]":        {Code: "[gal_wi]", Kind: "dry volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[pk_us]":         {Code: "[pk_us]", Kind: "dry volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[dqt_us]":        {Code: "[dqt_us]", Kind: "dry volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[dpt_us]":        {Code: "[dpt_us]", Kind: "dry volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[tbs_us]":        {Code: "[tbs_us]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[tsp_us]":        {Code: "[tsp_us]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[cup_us]":        {Code: "[cup_us]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[foz_m]":         {Code: "[foz_m]", Kind: "fluid volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[cup_m]":         {Code: "[cup_m]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[tsp_m]":         {Code: "[tsp_m]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[tbs_m]":         {Code: "[tbs_m]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[gal_br]":        {Code: "[gal_br]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[pk_br]":         {Code: "[pk_br]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[bu_br]":         {Code: "[bu_br]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[qt_br]":         {Code: "[qt_br]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[pt_br]":         {Code: "[pt_br]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[gil_br]":        {Code: "[gil_br]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[foz_br]":        {Code: "[foz_br]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[fdr_br]":        {Code: "[fdr_br]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[min_br]":        {Code: "[min_br]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[gr]":            {Code: "[gr]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[lb_av]":         {Code: "[lb_av]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[oz_av]":         {Code: "[oz_av]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[dr_av]":         {Code: "[dr_av]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[scwt_av]":       {Code: "[scwt_av]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[lcwt_av]":       {Code: "[lcwt_av]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[ston_av]":       {Code: "[ston_av]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[lton_av]":       {Code: "[lton_av]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[stone_av]":      {Code: "[stone_av]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[pwt_tr]":        {Code: "[pwt_tr]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[oz_tr]":         {Code: "[oz_tr]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[lb_tr]":         {Code: "[lb_tr]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[sc_ap]":         {Code: "[sc_ap]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[dr_ap]":         {Code: "[dr_ap]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[oz_ap]":         {Code: "[oz_ap]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[lb_ap]":         {Code: "[lb_ap]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[oz_m]":          {Code: "[oz_m]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[lne]":           {Code: "[lne]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[pnt]":           {Code: "[pnt]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[pca]":           {Code: "[pca]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[pnt_pr]":        {Code: "[pnt_pr]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[pca_pr]":        {Code: "[pca_pr]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[pied]":          {Code: "[pied]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[pouce]":         {Code: "[pouce]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[ligne]":         {Code: "[ligne]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[didot]":         {Code: "[didot]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[cicero]":        {Code: "[cicero]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[degF]":          {Code: "[degF]", Kind: "temperature", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[degR]":          {Code: "[degR]", Kind: "temperature", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[degRe]":         {Code: "[degRe]", Kind: "temperature", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"cal_[15]":        {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ycal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zcal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ecal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pcal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tcal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gcal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mcal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kcal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hcal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dacal_[15]":      {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dcal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"ccal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mcal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ucal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"ncal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pcal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fcal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"acal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zcal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ycal_[15]":       {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kical_[15]":      {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mical_[15]":      {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gical_[15]":      {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tical_[15]":      {Code: "cal_[15]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"cal_[20]":        {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ycal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zcal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ecal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pcal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tcal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gcal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mcal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kcal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hcal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dacal_[20]":      {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dcal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"ccal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mcal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ucal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"ncal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pcal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fcal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"acal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zcal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ycal_[20]":       {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kical_[20]":      {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mical_[20]":      {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gical_[20]":      {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tical_[20]":      {Code: "cal_[20]", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"cal_m":           {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ycal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zcal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ecal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pcal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tcal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gcal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mcal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kcal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hcal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dacal_m":         {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dcal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"ccal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mcal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ucal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"ncal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pcal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fcal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"acal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zcal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ycal_m":          {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kical_m":         {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mical_m":         {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gical_m":         {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tical_m":         {Code: "cal_m", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"cal_IT":          {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ycal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zcal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ecal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pcal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tcal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gcal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mcal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kcal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hcal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dacal_IT":        {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dcal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"ccal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mcal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ucal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"ncal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pcal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fcal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"acal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zcal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ycal_IT":         {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kical_IT":        {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mical_IT":        {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gical_IT":        {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tical_IT":        {Code: "cal_IT", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"cal_th":          {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ycal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zcal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ecal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pcal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tcal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gcal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mcal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kcal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hcal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dacal_th":        {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dcal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"ccal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mcal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ucal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"ncal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pcal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fcal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"acal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zcal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ycal_th":         {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kical_th":        {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mical_th":        {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gical_th":        {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tical_th":        {Code: "cal_th", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"cal":             {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ycal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zcal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ecal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pcal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tcal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gcal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mcal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kcal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hcal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dacal":           {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dcal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"ccal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mcal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ucal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"ncal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pcal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fcal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"acal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zcal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ycal":            {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kical":           {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mical":           {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gical":           {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tical":           {Code: "cal", Kind: "energy", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[Cal]":           {Code: "[Cal]", Kind: "energy", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[Btu_39]":        {Code: "[Btu_39]", Kind: "energy", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[Btu_59]":        {Code: "[Btu_59]", Kind: "energy", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[Btu_60]":        {Code: "[Btu_60]", Kind: "energy", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[Btu_m]":         {Code: "[Btu_m]", Kind: "energy", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[Btu_IT]":        {Code: "[Btu_IT]", Kind: "energy", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[Btu_th]":        {Code: "[Btu_th]", Kind: "energy", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[Btu]":           {Code: "[Btu]", Kind: "energy", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[HP]":            {Code: "[HP]", Kind: "power", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"tex":             {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ytex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ztex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Etex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ptex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ttex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gtex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mtex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ktex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"htex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"datex":           {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dtex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"ctex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mtex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"utex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"ntex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"ptex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"ftex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"atex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"ztex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ytex":            {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kitex":           {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mitex":           {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gitex":           {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Titex":           {Code: "tex", Kind: "linear mass density (of textile thread)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[den]":           {Code: "[den]", Kind: "linear mass density (of textile thread)", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"m[H2O]":          {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ym[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zm[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Em[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pm[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tm[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gm[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mm[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"km[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hm[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dam[H2O]":        {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dm[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cm[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mm[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"um[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nm[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pm[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fm[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"am[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zm[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ym[H2O]":         {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kim[H2O]":        {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mim[H2O]":        {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gim[H2O]":        {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tim[H2O]":        {Code: "m[H2O]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"m[Hg]":           {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ym[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zm[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Em[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pm[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tm[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gm[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mm[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"km[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hm[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dam[Hg]":         {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dm[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cm[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mm[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"um[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nm[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pm[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fm[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"am[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zm[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ym[Hg]":          {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kim[Hg]":         {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mim[Hg]":         {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gim[Hg]":         {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tim[Hg]":         {Code: "m[Hg]", Kind: "pressure", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[in_i'H2O]":      {Code: "[in_i'H2O]", Kind: "pressure", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[in_i'Hg]":       {Code: "[in_i'Hg]", Kind: "pressure", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[PRU]":           {Code: "[PRU]", Kind: "fluid resistance", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[wood'U]":        {Code: "[wood'U]", Kind: "fluid resistance", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[diop]":          {Code: "[diop]", Kind: "refraction of a lens", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[p'diop]":        {Code: "[p'diop]", Kind: "refraction of a prism", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"%[slope]":        {Code: "%[slope]", Kind: "slope", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[mesh_i]":        {Code: "[mesh_i]", Kind: "lineic number", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[Ch]":            {Code: "[Ch]", Kind: "gauge of catheters", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[drp]":           {Code: "[drp]", Kind: "volume", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[hnsf'U]":        {Code: "[hnsf'U]", Kind: "x-ray attenuation", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[MET]":           {Code: "[MET]", Kind: "metabolic cost of physical activity", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[hp'_X]":         {Code: "[hp'_X]", Kind: "homeopathic potency (retired)", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[hp'_C]":         {Code: "[hp'_C]", Kind: "homeopathic potency (retired)", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[hp'_M]":         {Code: "[hp'_M]", Kind: "homeopathic potency (retired)", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[hp'_Q]":         {Code: "[hp'_Q]", Kind: "homeopathic potency (retired)", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[hp_X]":          {Code: "[hp_X]", Kind: "homeopathic potency (Hahnemann)", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[hp_C]":          {Code: "[hp_C]", Kind: "homeopathic potency (Hahnemann)", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[hp_M]":          {Code: "[hp_M]", Kind: "homeopathic potency (Hahnemann)", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[hp_Q]":          {Code: "[hp_Q]", Kind: "homeopathic potency (Hahnemann)", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[kp_X]":          {Code: "[kp_X]", Kind: "homeopathic potency (Korsakov)", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[kp_C]":          {Code: "[kp_C]", Kind: "homeopathic potency (Korsakov)", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[kp_M]":          {Code: "[kp_M]", Kind: "homeopathic potency (Korsakov)", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[kp_Q]":          {Code: "[kp_Q]", Kind: "homeopathic potency (Korsakov)", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"eq":              {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Yeq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zeq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Eeq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Peq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Teq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Geq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Meq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"keq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"heq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daeq":            {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"deq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"ceq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"meq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ueq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"neq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"peq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"feq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aeq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zeq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yeq":             {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kieq":            {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mieq":            {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gieq":            {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tieq":            {Code: "eq", Kind: "amount of substance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"osm":             {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Yosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Eosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Posm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daosm":           {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"posm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yosm":            {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kiosm":           {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Miosm":           {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Giosm":           {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tiosm":           {Code: "osm", Kind: "amount of substance (dissolved particles)", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[pH]":            {Code: "[pH]", Kind: "acidity", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"g%":              {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Yg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Eg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dag%":            {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ug%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"ng%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"ag%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yg%":             {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kig%":            {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mig%":            {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gig%":            {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tig%":            {Code: "g%", Kind: "mass concentration", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[S]":             {Code: "[S]", Kind: "sedimentation coefficient", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[HPF]":           {Code: "[HPF]", Kind: "view area in microscope", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[LPF]":           {Code: "[LPF]", Kind: "view area in microscope", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kat":             {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ykat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zkat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ekat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pkat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tkat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gkat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mkat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kkat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hkat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dakat":           {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dkat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"ckat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mkat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ukat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nkat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pkat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fkat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"akat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zkat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ykat":            {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kikat":           {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mikat":           {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gikat":           {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tikat":           {Code: "kat", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"U":               {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daU":             {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yU":              {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiU":             {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiU":             {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiU":             {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiU":             {Code: "U", Kind: "catalytic activity", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[iU]":            {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Y[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Z[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"E[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"P[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"T[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"G[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"M[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"k[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"h[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"da[iU]":          {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"d[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"c[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"m[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"u[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"n[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"p[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"f[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"a[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"z[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"y[iU]":           {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Ki[iU]":          {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mi[iU]":          {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gi[iU]":          {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ti[iU]":          {Code: "[iU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[IU]":            {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Y[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Z[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"E[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"P[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"T[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"G[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"M[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"k[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"h[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"da[IU]":          {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"d[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"c[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"m[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"u[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"n[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"p[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"f[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"a[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"z[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"y[IU]":           {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Ki[IU]":          {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mi[IU]":          {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gi[IU]":          {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ti[IU]":          {Code: "[IU]", Kind: "arbitrary", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[arb'U]":         {Code: "[arb'U]", Kind: "arbitrary", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[USP'U]":         {Code: "[USP'U]", Kind: "arbitrary", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[GPL'U]":         {Code: "[GPL'U]", Kind: "biologic activity of anticardiolipin IgG", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[MPL'U]":         {Code: "[MPL'U]", Kind: "biologic activity of anticardiolipin IgM", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[APL'U]":         {Code: "[APL'U]", Kind: "biologic activity of anticardiolipin IgA", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[beth'U]":        {Code: "[beth'U]", Kind: "biologic activity of factor VIII inhibitor", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[anti'Xa'U]":     {Code: "[anti'Xa'U]", Kind: "biologic activity of factor Xa inhibitor (heparin)", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[todd'U]":        {Code: "[todd'U]", Kind: "biologic activity antistreptolysin O", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[dye'U]":         {Code: "[dye'U]", Kind: "biologic activity of amylase", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[smgy'U]":        {Code: "[smgy'U]", Kind: "biologic activity of amylase", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[bdsk'U]":        {Code: "[bdsk'U]", Kind: "biologic activity of phosphatase", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[ka'U]":          {Code: "[ka'U]", Kind: "biologic activity of phosphatase", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[knk'U]":         {Code: "[knk'U]", Kind: "arbitrary biologic activity", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[mclg'U]":        {Code: "[mclg'U]", Kind: "arbitrary biologic activity", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[tb'U]":          {Code: "[tb'U]", Kind: "biologic activity of tuberculin", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[CCID_50]":       {Code: "[CCID_50]", Kind: "biologic activity (infectivity) of an infectious agent preparation", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[TCID_50]":       {Code: "[TCID_50]", Kind: "biologic activity (infectivity) of an infectious agent preparation", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[EID_50]":        {Code: "[EID_50]", Kind: "biologic activity (infectivity) of an infectious agent preparation", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[PFU]":           {Code: "[PFU]", Kind: "amount of an infectious agent", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[FFU]":           {Code: "[FFU]", Kind: "amount of an infectious agent", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[CFU]":           {Code: "[CFU]", Kind: "amount of a proliferating organism", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[IR]":            {Code: "[IR]", Kind: "amount of an allergen calibrated through in-vivo testing using the Stallergenes® method", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[BAU]":           {Code: "[BAU]", Kind: "amount of an allergen calibrated through in-vivo testing based on the ID50EAL method of (intradermal dilution for 50mm sum of erythema diameters", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[AU]":            {Code: "[AU]", Kind: "procedure defined amount of an allergen using some reference standard", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[Amb'a'1'U]":     {Code: "[Amb'a'1'U]", Kind: "procedure defined amount of the major allergen of ragweed", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[PNU]":           {Code: "[PNU]", Kind: "procedure defined amount of a protein substance", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[Lf]":            {Code: "[Lf]", Kind: "procedure defined amount of an antigen substance", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[D'ag'U]":        {Code: "[D'ag'U]", Kind: "procedure defined amount of a poliomyelitis d-antigen substance", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[FEU]":           {Code: "[FEU]", Kind: "amount of fibrinogen broken down into the measured d-dimers", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[ELU]":           {Code: "[ELU]", Kind: "arbitrary ELISA unit", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[EU]":            {Code: "[EU]", Kind: "Ehrlich unit", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Np":              {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ENp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daNp":            {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yNp":             {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiNp":            {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiNp":            {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiNp":            {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiNp":            {Code: "Np", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"B":               {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daB":             {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yB":              {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiB":             {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiB":             {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiB":             {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiB":             {Code: "B", Kind: "level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"B[SPL]":          {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daB[SPL]":        {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yB[SPL]":         {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiB[SPL]":        {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiB[SPL]":        {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiB[SPL]":        {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiB[SPL]":        {Code: "B[SPL]", Kind: "pressure level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"B[V]":            {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daB[V]":          {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yB[V]":           {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiB[V]":          {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiB[V]":          {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiB[V]":          {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiB[V]":          {Code: "B[V]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"B[mV]":           {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daB[mV]":         {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yB[mV]":          {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiB[mV]":         {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiB[mV]":         {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiB[mV]":         {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiB[mV]":         {Code: "B[mV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"B[uV]":           {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daB[uV]":         {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yB[uV]":          {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiB[uV]":         {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiB[uV]":         {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiB[uV]":         {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiB[uV]":         {Code: "B[uV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"B[10.nV]":        {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daB[10.nV]":      {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yB[10.nV]":       {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiB[10.nV]":      {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiB[10.nV]":      {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiB[10.nV]":      {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiB[10.nV]":      {Code: "B[10.nV]", Kind: "electric potential level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"B[W]":            {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daB[W]":          {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yB[W]":           {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiB[W]":          {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiB[W]":          {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiB[W]":          {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiB[W]":          {Code: "B[W]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"B[kW]":           {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daB[kW]":         {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yB[kW]":          {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiB[kW]":         {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiB[kW]":         {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiB[kW]":         {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiB[kW]":         {Code: "B[kW]", Kind: "power level", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"st":              {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Yst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Est":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dast":            {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ust":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"ast":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yst":             {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kist":            {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mist":            {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gist":            {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tist":            {Code: "st", Kind: "volume", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ao":              {Code: "Ao", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"b":               {Code: "b", Kind: "action area", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"att":             {Code: "att", Kind: "pressure", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"mho":             {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ymho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zmho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Emho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pmho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tmho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gmho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mmho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kmho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hmho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"damho":           {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dmho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cmho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mmho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"umho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nmho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pmho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fmho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"amho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zmho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ymho":            {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kimho":           {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mimho":           {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gimho":           {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Timho":           {Code: "mho", Kind: "electric conductance", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[psi]":           {Code: "[psi]", Kind: "pressure", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"circ":            {Code: "circ", Kind: "plane angle", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"sph":             {Code: "sph", Kind: "solid angle", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[car_m]":         {Code: "[car_m]", Kind: "mass", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[car_Au]":        {Code: "[car_Au]", Kind: "mass fraction", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[smoot]":         {Code: "[smoot]", Kind: "length", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[m/s2/Hz^(1/2)]": {Code: "[m/s2/Hz^(1/2)]", Kind: "amplitude spectral density", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[NTU]":           {Code: "[NTU]", Kind: "turbidity", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"[FNU]":           {Code: "[FNU]", Kind: "turbidity", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"bit_s":           {Code: "bit_s", Kind: "amount of information", Metric: false, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"bit":             {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ybit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Zbit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Ebit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Pbit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tbit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gbit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mbit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kbit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hbit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dabit":           {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dbit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cbit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mbit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"ubit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nbit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pbit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fbit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"abit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zbit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"ybit":            {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"Kibit":           {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Mibit":           {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Gibit":           {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Tibit":           {Code: "bit", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"By":              {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daBy":            {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yBy":             {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiBy":            {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiBy":            {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiBy":            {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiBy":            {Code: "By", Kind: "amount of information", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"Bd":              {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"YBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"ZBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"EBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"PBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"kBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x3, 0xe8}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"hBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x64}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"daBd":            {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0xa}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"dBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xa}))},
	"cBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x64}))},
	"mBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0xe8}))},
	"uBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xf, 0x42, 0x40}))},
	"nBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3b, 0x9a, 0xca, 0x0}))},
	"pBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xe8, 0xd4, 0xa5, 0x10, 0x0}))},
	"fBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x3, 0x8d, 0x7e, 0xa4, 0xc6, 0x80, 0x0}))},
	"aBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd, 0xe0, 0xb6, 0xb3, 0xa7, 0x64, 0x0, 0x0}))},
	"zBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0x36, 0x35, 0xc9, 0xad, 0xc5, 0xde, 0xa0, 0x0, 0x0}))},
	"yBd":             {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1}), (&big.Int{}).SetBytes([]byte{0xd3, 0xc2, 0x1b, 0xce, 0xcc, 0xed, 0xa1, 0x0, 0x0, 0x0}))},
	"KiBd":            {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x4, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"MiBd":            {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x10, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"GiBd":            {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x40, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
	"TiBd":            {Code: "Bd", Kind: "signal transmission rate", Metric: true, Magnitude: (&big.Rat{}).SetFrac((&big.Int{}).SetBytes([]byte{0x1, 0x0, 0x0, 0x0, 0x0, 0x0}), (&big.Int{}).SetBytes([]byte{0x1}))},
}
